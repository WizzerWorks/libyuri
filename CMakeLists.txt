cmake_minimum_required (VERSION 2.8)
PROJECT(yuri2 CXX)
ENABLE_LANGUAGE(C)

INCLUDE(FindPkgConfig)
INCLUDE(CheckIncludeFiles)
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules/")
include(cuda_module)
include(GetGitRevisionDescription)

git_describe(YURI_GIT_VERSION)
IF (UNIX)
add_definitions("-Wall -pedantic -Wextra")
ENDIF ()
OPTION (BUILD_SHARED_LIBS "Build shared libraries." ON)
SET(LIBNAME yuri_core)
SET(LIBNAME_HELPER_LIBAV yuri_helper_av)
SET(LIBNAME_HELPER_CUDA yuri_helper_cuda)
SET(LIBNAME_HELPER_X11 yuri_helper_x11)
SET (CMAKE_SHARED_MODULE_PREFIX "yuri2_module_")
include_directories( ${CMAKE_SOURCE_DIR}/src )
SET (EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)
SET (MODULE_DIR ${EXECUTABLE_OUTPUT_PATH}/modules)
SET (TARGET_MODULE_PATH lib/yuri2/)
SET(CORE_LIBAV FALSE)
SET(CORE_CUDA FALSE)
SET(CORE_X11 FALSE)

OPTION (YURI_DISABLE_CUDA "Disable building of CUDA helpers" OFF)
OPTION (YURI_DISABLE_LIBAV "Disable building of libav helpers and support" OFF)
OPTION (YURI_DISABLE_SAGE "Disable building of libsage related modules" OFF)
OPTION (YURI_DISABLE_X11 "Explicitly disable building of X11 helpers and related modules" OFF)
OPTION (YURI_DISABLE_PNG "Disable building of CUDA helpers" OFF)

add_subdirectory(src)

